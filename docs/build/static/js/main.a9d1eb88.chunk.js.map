{"version":3,"sources":["components/AddLink.tsx","functions/validateLink.ts","components/SubmitLink.tsx","components/Message.tsx","v4.tsx","reportWebVitals.ts","index.tsx"],"names":["AddLink","type","autoComplete","spellCheck","autoCorrect","required","placeholder","value","this","props","url","onChange","event","currentTarget","React","Component","validateLink","test","SubmitLink","disabled","onClick","Message","App","useState","setUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAOaA,EAAb,uKACY,IAAD,OACP,OACE,uBACEC,KAAK,OACLC,aAAa,MACbC,WAAW,QACXC,YAAY,MACZC,UAAQ,EACRC,YAAY,2EACZC,MAAOC,KAAKC,MAAMC,IAClBC,SAAU,SAACC,GAAD,OAAW,EAAKH,MAAME,SAASC,EAAMC,cAAcN,cAXrE,GAA6BO,IAAMC,WCP5B,SAASC,EAAaT,GAC3B,MAAO,ycAAycU,KAC9cV,GCMG,IAAMW,EAAb,uKAEI,OACE,uBACEjB,KAAK,SACLM,MAAM,WACNY,UAAWH,EAAaR,KAAKC,MAAMC,KACnCU,QAASZ,KAAKC,MAAMW,cAP5B,GAAgCN,IAAMC,WCFzBM,EAAb,uKAGI,OADgBL,EAAaR,KAAKC,MAAMC,KAE/B,sCAEA,+CANb,GAA6BI,IAAMC,WCepBO,EAhBH,WACV,IADgB,EAKMC,mBAAS,IALf,mBAKTb,EALS,KAKJc,EALI,KAMhB,OACE,gCACE,cAAC,EAAD,CAASd,IAAKA,EAAKC,SAAUa,IAC7B,cAAC,EAAD,CAAYd,IAAKA,EAAKU,QARP,SAACR,OAShB,cAAC,EAAD,CAASF,IAAKA,QCDLe,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a9d1eb88.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { UrlType } from \"../types/Url\";\r\n\r\ntype LinkProps = UrlType & {\r\n  onChange: (event: string) => void;\r\n};\r\n\r\nexport class AddLink extends React.Component<LinkProps> {\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        spellCheck=\"false\"\r\n        autoCorrect=\"off\"\r\n        required\r\n        placeholder=\"https://medium.com/swlh/sexism-in-tech-an-inconvenient-truth-26df0329e39\"\r\n        value={this.props.url}\r\n        onChange={(event) => this.props.onChange(event.currentTarget.value)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","export function validateLink(value: string) {\r\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(\r\n    value\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { validateLink } from \"../functions/validateLink\";\r\nimport { UrlType } from \"../types/Url\";\r\n\r\ntype SubmitProps = UrlType & {\r\n  onClick: (event: React.FormEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nexport class SubmitLink extends React.Component<SubmitProps> {\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Add link\"\r\n        disabled={!validateLink(this.props.url)}\r\n        onClick={this.props.onClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { validateLink } from \"../functions/validateLink\";\r\nimport { UrlType } from \"../types/Url\";\r\n\r\ntype MessageProps = UrlType & {};\r\n\r\nexport class Message extends React.Component<MessageProps> {\r\n  render() {\r\n    const isValid = validateLink(this.props.url);\r\n    if (isValid) {\r\n      return <p>v pho</p>;\r\n    } else {\r\n      return <p>not v poho</p>;\r\n    }\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddLink } from \"./components/AddLink\";\r\nimport { SubmitLink } from \"./components/SubmitLink\";\r\nimport { Message } from \"./components/Message\";\r\n\r\nconst App = () => {\r\n  const submitForm = (event: React.FormEvent<HTMLInputElement>) => {\r\n    //   //this.setState({ disabled: e. });\r\n  };\r\n\r\n  const [url, setUrl] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <AddLink url={url} onChange={setUrl} />\r\n      <SubmitLink url={url} onClick={submitForm} />\r\n      <Message url={url}></Message>\r\n      {/* <Listing items={items}></Listing> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n//export interface Items {\r\n//   url: string;\r\n// }\r\n\r\n// const items = [\r\n//   {\r\n//     url: \"https://typeofnan.dev/your-first-react-typescript-project-todo-app/\",\r\n//   },\r\n//   {\r\n//     url:\r\n//       \"https://stackoverflow.com/questions/29280445/reactjs-setstate-with-a-dynamic-key-name\",\r\n//   },\r\n//   {\r\n//     url:\r\n//       \"https://reactjs.org/docs/lists-and-keys.html\",\r\n//   },\r\n// ];\r\n// class Listing extends React.Component<Items> {\r\n//   constructor(props: Items) {\r\n//     super(props);\r\n//     this.state = {\r\n//       url: \"\",\r\n//     };\r\n//   }\r\n//   render() {\r\n//     const listItems = items.map((url) => <li>{url}</li>);\r\n//     return <ul>{listItems}</ul>;\r\n//   }\r\n// }\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./v4\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}